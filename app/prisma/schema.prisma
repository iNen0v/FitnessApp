generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  image         String?
  workouts      Workout[]
  meals         Meal[]
  progress      Progress[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Workout {
  id        String    @id @default(cuid())
  date      DateTime
  duration  Int
  feeling   String
  notes     String?
  exercises Exercise[]
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Exercise {
  id        String    @id @default(cuid())
  name      String
  sets      Set[]
  workout   Workout   @relation(fields: [workoutId], references: [id])
  workoutId String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Set {
  id         String   @id @default(cuid())
  reps       Int
  weight     Float
  notes      String?
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Meal {
  id        String   @id @default(cuid())
  date      DateTime
  name      String
  calories  Int
  protein   Float
  carbs     Float
  fats      Float
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Progress {
  id          String   @id @default(cuid())
  date        DateTime
  weight      Float?
  chest       Float?
  waist       Float?
  hips        Float?
  arms        Float?
  thighs      Float?
  photos      String[]
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}